{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/private/chat/chat.component.ts","./src/app/private/chat/chat.component.html","./src/app/private/private.component.ts","./src/app/private/private.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PrivateComponent} from '../app/private/private.component'\nimport {ChatComponent} from '../app/private/chat/chat.component'\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/chat', pathMatch: 'full'},\n  {\n    path: 'chat', component: ChatComponent,\n  },\n  // {path: '', redirectTo: '/private/chat', pathMatch: 'full'},\n  // {\n  //   path: 'private', component: PrivateComponent,\n  //   children: [\n  //     { path: 'chat', component: ChatComponent },\n  //   ]\n  // },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HubConnectionBuilder,HubConnection } from '@aspnet/signalr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  // title = 'Angular';\n  // UserName = '';\n  // MessageText = '';\n  // list = [];\n  // // public connection : HubConnection\n\n  // constructor(){\n  // }\n\n  // ngOnInit(): void {\n  //   // let connection = new HubConnection('https://localhost:44305/api/Message');\n  //   var body=\n  //   {\n  //     \"UserName\" : \"Osama\",\n  //     \"Message\" : \"SSS\"\n  //   }\n  //   let connection = new HubConnectionBuilder().withUrl('https://localhost:44305/messageHub?UserName='+ body.UserName +'&MessageText='+body.Message ).build();\n\n  //   connection.on('send',data=>{\n  //     console.log(data);\n  //   });\n\n  //   // connection.start().then(()=> connection.invoke('send','Hello'));\n  //   connection.start().then(()=> console.log('Connected'));\n  // }\n\n\n}\n","\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './private/chat/chat.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PrivateComponent } from './private/private.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    PrivateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  title = 'Angular';\n  UserName = 'UserName';\n  MyUserName = 'MyUserName';\n  MessageText = 'MessageText';\n  list = [];\n\n  URL = 'http://tuworld-001-site4.gtempurl.com/';\n  connection = new HubConnectionBuilder().withUrl(this.URL + 'messageHub').build();\n  connectionId = '';\n\n  // public connection : HubConnection\n\n  constructor(public http: HttpClient){\n  }\n\n  ngOnInit(): void {\n    // let connection = new HubConnection('https://localhost:44305/api/Message');\n\n\n    // this.connection.on('send',data=>{\n    //   this.list.push(data);\n    //   console.log(data);\n    // });\n\n    // this.ProgressHub.on('Send',data=>{\n    //   this.list.push(data);\n    //         console.log(data);\n    // });\n\n    // this.ProgressHub.start().then(()=> console.log('ProgressHub'));\n\n    this.connection.on('sendMessageToUser',data=>{\n      this.list.push(data);\n    });\n\n    // this.connection.on('send',data=>{\n    //   this.list.push(data);\n    //         console.log(data);\n    // });\n\n    // connection.start().then(()=> connection.invoke('send','Hello'));\n    this.connection.start().then(()=> \n    {\n      this.Get();\n    });\n  }\n\n  Get()\n  {\n    this.connection.invoke('getConnectionId')\n    .then(function (connectionId) {\n      localStorage.setItem('connectionId', connectionId);\n    });\n    this.connectionId = localStorage.getItem('connectionId');\n     console.log(localStorage.getItem('connectionId'));\n  }\n\n  AddMessage()\n  {\n    this.Get();\n    var body = {\n      ConnectionId : this.connectionId,\n      MyUserName : this.MyUserName,\n      UserName : this.UserName,\n      MessageText : this.MessageText\n    }\n\n    // this.connection.invoke('SendMessageToUser',body.ConnectionId,body.MessageText,data=>{\n    //   this.list.push(data);\n    //   console.log(data);\n    // });\n\n    return this.http.post(this.URL + 'api/Message/PostModelCaller', body).subscribe(res => {\n    },\n    err => {\n      alert('Check Connection');\n    });\n\n    // this.connection.invoke('SendMessageToUser',body.UserName,body.MessageText);\n\n    // return this.http.post(this.URL + 'api/Message/PostModel', body).subscribe(res => {\n    // },\n    // err => {\n    //   alert('Check Connection');\n    // });\n  }\n\n}\n","\n<div class=\"container\" style=\"padding-top:80px\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <span>Enter My Name</span><br />\n            <input [(ngModel)] = \"MyUserName\" type=\"text\" id=\"MyUserName\" /> <br />\n            <span>Enter Your Name</span><br />\n            <input [(ngModel)] = \"UserName\" type=\"text\" id=\"UserName\" /> <br />\n            <span>Enter Your Message</span><br />\n            <textarea [(ngModel)] = \"MessageText\" rows=\"10\" cols=\"50\" id=\"MessageText\"> </textarea> <br />\n            <button (click) = \"AddMessage()\" type=\"submit\" id=\"btnSend\" class=\"btn btn-info\">Send Message</button>\n        </div>\n        <div class=\"col-md-6\">\n            <h3>Message List</h3>\n            <ul id=\"list\" class=\"alert alert-info\">\n                <h6 *ngFor=\"let D of list\">{{D}}</h6>\n            </ul>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <button (click) = \"Get()\" type=\"submit\" id=\"btnSend\" class=\"btn btn-info\">Get</button>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-private',\n  templateUrl: './private.component.html',\n  styleUrls: ['./private.component.css']\n})\nexport class PrivateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\" style=\"padding: 4%;\">\n    <router-outlet></router-outlet>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}